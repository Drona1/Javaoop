1. fist:
    1. Создать класс Person, который инкапсулирует информацию о человеке - акторе в системе.
        Добавить поля для описания характерных особенностей человека.
    2. Создать 2 уникальных Person, с разными именами, профессиями и гендерами.
        Распечатать информацию о них на консоль.

2. second:
    Создать систему классов, позволяющую пользователям бронировать билеты на разные сеансы в разных залах
     (зал должен содержать ряды и места).
     Реализовать залы с помощью наследования(обычный, 4д, мини).
     Написать метод для бронирования конкретного места на конкретный сеанс.
     Написать метод для бронирования первого повашегося свободного места на любой сеанс.

3. third:
    Спроектировать систему классов для интернет-магазина.
    Покупатель может иметь n денежных средств, n купленных товаров, корзину с зарезервированными товарами.
    Товары бывают разных категорий(продовольствие, одежда, мебель, сувениры),
    каждый товар представлен в  магазине в фиксированном кол-ве.
    Система должна позволять:
    1. Обращаться человеку в магазин с запросом на получение ассортимента/покупку n-го количества товаров.
    2. Позволять заведующему магазина добавлять/убирать товары со склада.
    3. При оформлении заказа пользователем перенаправлять на систему оплаты -
        она показывает список заказанных товаров из корзины и при подтверждении
        пользователем совершает покупку(при условии достаточности средств на счету пользователя)

4. fourth
    1. Создать систему типов для реализации доменной области "автосалон".
        В салоне могут находиться автомобили разных типов с уникальными характерными особенностями.
        При реализации использовать как композицию, так и наследование.
    2. Для одного из типов нашей системы переопределить toString, equals, hashCode собственноручно(без автогенерации).
    3. Для всех остальных типов то же, что и в 2, но с автогенерацией.

5. fifth
    1. Переопределить методі toString, equals, hashCode для всех типов из интернет магазина.
        Один раз - вручную, далее - автогенерацией.
    2. Зная тот факт, что сборщик мусора начинает работать, когда переполняется память,
        реализовать метод finalize над произвольнім типом и заставить сборщик мусора его візвать.
    3. Создать систему классов для программы "зоопарк".
        Пользователь должен иметь возможность попасть в зоопарк, оплатив его и кормить разных животных по выбору
        (лошадь, шимпанзе, кенгуру). Каждое животное должно издавать только ему присущий звук при кормежке .
        У пользователя должна быть возможность попасть на экскурсию(покормить всех животных).

6. sixth
    1. Написать класс Pair, который будет содержать два поля разных типов. Класс должен работать с любой парой типов.
    2. Написать примеры программ, которые
    2.1 Выбрасывает NullPointerException
    2.2 Выбрасывает ArrayIndexOutOfBoundsException (когда запрашиваете из массива по несуществующему номеру ячейки)
    2.3 Выбрасывает ClassCastExcetpion(когда делаете неправильное явное приведение типа).