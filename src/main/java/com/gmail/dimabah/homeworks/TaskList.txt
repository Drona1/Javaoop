1. fist:
    1. Создать класс Person, который инкапсулирует информацию о человеке - акторе в системе.
        Добавить поля для описания характерных особенностей человека.
    2. Создать 2 уникальных Person, с разными именами, профессиями и гендерами.
        Распечатать информацию о них на консоль.

2. second:
    Создать систему классов, позволяющую пользователям бронировать билеты на разные сеансы в разных залах
     (зал должен содержать ряды и места).
     Реализовать залы с помощью наследования(обычный, 4д, мини).
     Написать метод для бронирования конкретного места на конкретный сеанс.
     Написать метод для бронирования первого повашегося свободного места на любой сеанс.

3. third:
    Спроектировать систему классов для интернет-магазина.
    Покупатель может иметь n денежных средств, n купленных товаров, корзину с зарезервированными товарами.
    Товары бывают разных категорий(продовольствие, одежда, мебель, сувениры),
    каждый товар представлен в  магазине в фиксированном кол-ве.
    Система должна позволять:
    1. Обращаться человеку в магазин с запросом на получение ассортимента/покупку n-го количества товаров.
    2. Позволять заведующему магазина добавлять/убирать товары со склада.
    3. При оформлении заказа пользователем перенаправлять на систему оплаты -
        она показывает список заказанных товаров из корзины и при подтверждении
        пользователем совершает покупку(при условии достаточности средств на счету пользователя)

4. fourth
    1. Создать систему типов для реализации доменной области "автосалон".
        В салоне могут находиться автомобили разных типов с уникальными характерными особенностями.
        При реализации использовать как композицию, так и наследование.
    2. Для одного из типов нашей системы переопределить toString, equals, hashCode собственноручно(без автогенерации).
    3. Для всех остальных типов то же, что и в 2, но с автогенерацией.

5. fifth
    1. Переопределить методі toString, equals, hashCode для всех типов из интернет магазина.
        Один раз - вручную, далее - автогенерацией.
    2. Зная тот факт, что сборщик мусора начинает работать, когда переполняется память,
        реализовать метод finalize над произвольнім типом и заставить сборщик мусора его візвать.
    3. Создать систему классов для программы "зоопарк".
        Пользователь должен иметь возможность попасть в зоопарк, оплатив его и кормить разных животных по выбору
        (лошадь, шимпанзе, кенгуру). Каждое животное должно издавать только ему присущий звук при кормежке .
        У пользователя должна быть возможность попасть на экскурсию(покормить всех животных).

6. sixth
    1. Написать класс Pair, который будет содержать два поля разных типов. Класс должен работать с любой парой типов.
    2. Написать примеры программ, которые
    2.1 Выбрасывает NullPointerException
    2.2 Выбрасывает ArrayIndexOutOfBoundsException (когда запрашиваете из массива по несуществующему номеру ячейки)
    2.3 Выбрасывает ClassCastExcetpion(когда делаете неправильное явное приведение типа).

7. seventh
    1. Реализовать рефлексивный метод, который восстанавливает по метаинформации исходный класс. Метод вида:
        public String restoreClassMetainf(Class clazz) {...}
    2. С помощью рефлексии написать метод, который достает по метаинформации все строковые поля обьекта
        и устанавливает в них значения "You're hacked. Send 10 btc to 34kNXokGAdmLvsJFFZdrkn27PPtvYLXDYS".
         Метод вида:
        public void hackTheObject(Object obj) {...}
    3. Покрыть тестами приложение - инернет-магазин
8. eighth
    1. Реализовать свою структуру данных, не используя ничего готового из collections framework.
        На вібор: ArrayList, LinkedList.
        Минимальній набор методов:
        public boolean add(T data);
        public boolean remove(int index);
        public T get(int index);
        public void print();
        public boolean contains(T data);
    2. Написать тесті для структурі данніх.
    3*. Написать все структурі: ArrayList, LinkedList, Queue
9. ninth
    1. Реализовать свою структуру данных HashSet.
        Минимальній набор методов:
        public boolean add(T data);
        public boolean remove(int index);
        public T get(int index);
        public void print();
        public boolean contains(T data);
    2. Написать тесті для структурі данніх.
10. tenth
    1. Реализовать свою структуру данных TreeSet.
        Минимальній набор методов:
        public boolean add(T data);
        public boolean remove(int index);
        public T get(int index);
        public void print();
        public boolean contains(T data);
    2. Написать тесті для структурі данніх.
    3. Написать метод, которій принимает коллекцию строк, содержащих названия стран и возвращает аббревиатурі
        первіх десяти стран(первіе две букві в аппер кейсе) назад пользователю. Сделать с помощью стрим апи.
        Отфильтровать несуществующие страні(должна біть коллекция, содержащая список допустиміх стран).
11. eleventh
    1. Написать программу, которая читает файл из одной папки и копирует его в другой. Попробовать разные методы.
        Сравнить производительность.
    2. Сериализовать и десереализовать обьекты из произвольного созданного типа.